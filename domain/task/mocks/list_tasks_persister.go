// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/marcelo-rocha/task-service-challenge/domain/entities"
	"github.com/marcelo-rocha/task-service-challenge/domain/task"
	"sync"
)

// Ensure, that ListTasksPersisterMock does implement task.ListTasksPersister.
// If this is not the case, regenerate this file with moq.
var _ task.ListTasksPersister = &ListTasksPersisterMock{}

// ListTasksPersisterMock is a mock implementation of task.ListTasksPersister.
//
// 	func TestSomethingThatUsesListTasksPersister(t *testing.T) {
//
// 		// make and configure a mocked task.ListTasksPersister
// 		mockedListTasksPersister := &ListTasksPersisterMock{
// 			GetTasksFunc: func(ctx context.Context, lastId int64, limit uint) ([]entities.Task, error) {
// 				panic("mock out the GetTasks method")
// 			},
// 		}
//
// 		// use mockedListTasksPersister in code that requires task.ListTasksPersister
// 		// and then make assertions.
//
// 	}
type ListTasksPersisterMock struct {
	// GetTasksFunc mocks the GetTasks method.
	GetTasksFunc func(ctx context.Context, lastId int64, limit uint) ([]entities.Task, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetTasks holds details about calls to the GetTasks method.
		GetTasks []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// LastId is the lastId argument value.
			LastId int64
			// Limit is the limit argument value.
			Limit uint
		}
	}
	lockGetTasks sync.RWMutex
}

// GetTasks calls GetTasksFunc.
func (mock *ListTasksPersisterMock) GetTasks(ctx context.Context, lastId int64, limit uint) ([]entities.Task, error) {
	callInfo := struct {
		Ctx    context.Context
		LastId int64
		Limit  uint
	}{
		Ctx:    ctx,
		LastId: lastId,
		Limit:  limit,
	}
	mock.lockGetTasks.Lock()
	mock.calls.GetTasks = append(mock.calls.GetTasks, callInfo)
	mock.lockGetTasks.Unlock()
	if mock.GetTasksFunc == nil {
		var (
			tasksOut []entities.Task
			errOut   error
		)
		return tasksOut, errOut
	}
	return mock.GetTasksFunc(ctx, lastId, limit)
}

// GetTasksCalls gets all the calls that were made to GetTasks.
// Check the length with:
//     len(mockedListTasksPersister.GetTasksCalls())
func (mock *ListTasksPersisterMock) GetTasksCalls() []struct {
	Ctx    context.Context
	LastId int64
	Limit  uint
} {
	var calls []struct {
		Ctx    context.Context
		LastId int64
		Limit  uint
	}
	mock.lockGetTasks.RLock()
	calls = mock.calls.GetTasks
	mock.lockGetTasks.RUnlock()
	return calls
}
